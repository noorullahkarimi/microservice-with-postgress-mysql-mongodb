name: CI
# we use the master branch. it is standard name for
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
# works should do for service1, we tell it should run on the ubuntu-latest version
jobs:
  service1:
    name: Historical-Service
    runs-on: ubuntu-latest
    
    # we should have the code for future steps, so we clone current repository.
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      # we need to set up jdk v17 because in our service1 we used the v17 java
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: adopt
          
        # this folder with name Historical-Service/mvnw not have permission and should we give it
        # because we use the ubuntu-latest for it
      - name: Grant execute permissions to Maven wrapper
        run: chmod +x Historical-Service/mvnw
        
        # then we goes to folder and we build the project 
      - name: Build and Test Historical-Service
        run: cd Historical-Service && ./mvnw clean install

  service2:
    name: HotelService
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: adopt
          
      - name: Grant execute permissions to Maven wrapper
        run: chmod +x HotelService/mvnw

      - name: Build and Test HotelService
        run: cd HotelService && ./mvnw clean install

  service3:
    name: TourService
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: adopt
          
      - name: Grant execute permissions to Maven wrapper
        run: chmod +x TourService/mvnw

      - name: Build and Test TourService
        run: cd TourService && ./mvnw clean install
  eureka:
    name: eureka
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: adopt
          
      - name: Grant execute permissions to Maven wrapper
        run: chmod +x eureka/mvnw

      - name: Build and eureka
        run: cd eureka && ./mvnw clean install

  apigateway:
    name: apigateway
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: adopt
          
      - name: Grant execute permissions to Maven wrapper
        run: chmod +x apigateway/mvnw

      - name: Build and Test apigateway
        run: cd apigateway && ./mvnw clean install
  nuxt:
    name: front
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install Dependencies
        run: |
          cd front
          npm install

      - name: Build front
        run: |
          cd front
          npm run build

#      - name: Test front
#        run: |
#          cd front
#          npm run test